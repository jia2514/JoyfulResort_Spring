package com.joyfulresort.he.member.controller;

import java.io.IOException;

import javax.servlet.ServletOutputStream;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import com.joyfulresort.he.member.model.MemberService;

@Controller
@RequestMapping("/member")
public class DBReaderController{
	
	@Autowired
	MemberService memSvc;
	
	@GetMapping("/DBReader")
	public void dBReader(@RequestParam("memberID") String ID, HttpServletRequest req, HttpServletResponse res) throws IOException{
		
		res.setContentType("image/gif");
		ServletOutputStream out = res.getOutputStream();
		
		try {
			out.write(memSvc.getOneMember(Integer.valueOf(ID)).getMemberImg());
		} catch (Exception e) {
			byte[] buf = java.util.Base64.getDecoder().decode("iVBORw0KGgoAAAANSUhEUgAAAMgAAADICAYAAACtWK6eAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAwNSURBVHhe7d0JUxrZGgbgDxfAXXGNayZmmam6//+XzK3J4i4qIiCyCgq55+2c3BhHj4B00833PlNW6E6qxu7i7T77iaXPL74LET1pxP5JRE9gQIgcGBAiBwaEyIEBIXJgQIgcGBAiBwaEyIEBIXJgQIgcGBAiBwaEyIEBIXJgQIgcGBAiBwaEyIEBIXJgQIgcGBAiBwaEyIEBIXJgQIgcGBAiBwaEyIEBIXJgQIgcGBAiBwaEyIEBIXJgQIgcGBAiBwaEyIEBIXJgQIgcGBAiBwaEyIEBIXJgQIgcGBAiB+6TPiDtdlsazaY0Gg25u7uX+1bLO/f9+3eJxWIyMjIiY6OjMj4+JolEQhLxuHeOgsWABARhKJXKUq5UpVytmGA07d90LpGIy8zUtMxMT8ns7IwXGvIXA+IjhCKXL0jhuij121t7tn8mkklJLczLUirlhYf6jwHxQfGmJJlsVkrlij3jv9mZaVlbWZH5uVl7hvqBAekjvCnOLjK+vC06lTRvlc03a96bhV6PAemDarUmR6dpqdZq9szgTU1Oys7WpkxPTdoz1AsG5BXQ6nSSPpdsLmfPhM/K0pJsb66zBaxHDEiPKtWq7B0eS9NUxMMuHo/L+z92zNtkyp6hTjEgPchkr8yb48weRUMsJrK1se5V5KlzfO92AZ14+0fHkQsHmF/dKw7i98d1UGcYkA6hvvFlb1/yhWt7Jprw++M6cD30MgakA61WS/75uhdov4afcB24HlwXuTEgL8CT9rN54oapCbcfcD18k7yMAXFAWf3bwaHXzzGMKua6vprrY53keQyIw9FJWm5KZXs0nDCA8ujk1B7RYwzIM7K5vFzl8/ZouF3lC5K9Cm9n5yAxIE+o1etyfJq2Rzocp8+866bfMSCPoNK6d3CkrlyO69V43S9hQB5JX2TkttGwR7rguk/Pzu0RAQPyAIoYmcusPdIJw2hY1PqFAXkArVZk7oOy+pcLA2JdF2+8EbokUqlUvftBDMj/sez9O96PHxgQo1Asqq2YPwf3A1OItWNAjIvMpf1ED51f8r6oDwgG7VVrbLV5Ss3cl2EbpNkt9QHhEAu3y6zu+6M6IOg1j/oEKL+hfqa5d111QLDAW5tDK5zwEEFItFIdkOsbtvV3olgs2U/66H6DsDOsI8USA6IOWmdanG7aEcxd19qapTYg5SFZgCEow7JgRbfUBqSivH2/W8M6L/8lKgOCVQaxYAF1jkUsRVqttrf1GXUOmwFp7A9RGRAMxMM+gNSd21t9DxWVAYnCiuxhpHHEs9KA3NlP1I3mnb77pjIg2HKZuqdxLV+llXQGpBf39/f2kx4qA8IFm3vDViwluDhabzSOfFYZEDbx9kbjXWNAqGOxmL6vi8qAjHJL5J6MjjIgKoyOjdlP1I0xhfdNZUDGxxmQXowzIDok4nH7ibqh8b7pDEgiwabeHkxMJO0nPXQWsUxRYWx01B5RJ8bGRk0lXd89UxkQmJqatJ+oExPJCftJF70BmWRAujGt9IGiNiAz01P2E3ViWun90huQmRn7iToxp/R+qQ0IetOnp/gW6QTu04jS0QdqAwKp+Tn7iVwWFN8n1QFZWJi3n8hlcWHBftJHdUDQM8zKuhvuTzw+bo/0UR0QWF5ctJ/oKdrvj/qALKYW2Kv+DNwX3B/N1AcEk6dWV5btET20srysfnKZ+oDAqvkijHCW4W9GRmKytsoHBwNiYCDe2uqKPSJYW1lh0dNgQKw3q6v8Qlh4YKyvrdoj3RgQC/OttzbW7ZFuW+vranvOH+NdeGB5aVHtqNWfMA0A94F+YEAeebezo7blBte9a66ffmFAHkkmE7K9uWGPdNk2RUxcP/3CgDxhdXlJ5udm7ZEOuF72B/0bA/KM3bc7kkzoeJriOnG99G8MyDOwQMHH9++8Js9hhuvDdWpckKETDIgDnqwfd3eHtskT14Xr0/Km7AUD8gI0+34yT9hhG4qCcOC6tDdrv4QB6cDM9LR8+vB+aBa9xnV8er/rXRe5MSAdwsShvz59kPHxaE8ewrrEf338wIliHWJAujA5MSH/+fNjZNfUmprE7/9JJs2f1JlY+vyCi9R2Cev6Hp+eSTaXs2fCb2VpSXa2NtTP7+gWA/IKN6WSHByfyN1deHd/RZHq3c62zM3q6vjsFwbklVrttpyenUv2Knxvk5XlJW+EMnfU6h0D0if121s5SZ97b5VBw7ARBGMiqW+7gn5jQPqsWqvLeSYj18UbeyY4WOBtY22NlfA+YkB80ry7k6tcXnL5gjSaTXu2/7C219JiypvDEY94E3QYMSABqNXr3hvlplyWarX2qt2t0AqFSU1YTBpvDDQ9k38YkKCZu12t10xRrCa3jaY0Gg25v7+XO/PTNhX+7+3vEhuJeUNBvJ2wzA+2jEsm4l7/y6T5YUNtcBiQEHnYR8E9FMOB7X8hglD8/KFw4BvER61W21TQG3JnKuwoQqFDEcWpVqvl9Z+0zd+32q0HwUAJzBSx8J95m+AHRS2suIK+jJHRUW9pIowHQ/ELnYCopI+NjZt/a/+n1FcMyCvhi40+EPzc3jakXv/xGS1XqFMEAUFCYJLJpEwkTX3F+zNpKvBJrw5DvWNAuoQvf7lSlZqpZFeqNa+FKswQHOwviAo+5n5giPvDug65MSAvwFuhWCqZUFSkXK7IvSkeRR3CgqDMzc54w96HdcZkPzAgj6DIdFMqS/HmRq7NT5gHIvYD3iazJizz87OyMDeverOcpzAgBkJRvClJ/vpaisUbaaO2rBTmjKTm52UxlWJYDNUBqZi6xFWhIIXCtdeqRL9D8WvJBCWVWlA7IlhdQNDEivFRl7mcV7+gl6EYtryY8iZdaRsIqSYgt42GXGavvAGEmotQr4U909+srqjZGnroA+INP7/IeBVu6p94PO7tIYI3yzA3Gw9tQBCMs4sLr/JN/kGv/gaCsrQ4lEEZuoBgdOzp+YUUrov2DAUBb5StjTeyuDBcu+IOTUBQ+U6bohTqGTQ4mJ/ydnvTq6sMg6EISK5Q8OaDYyAghQOah7c31yM/FizSAWk0mnJwfOyNjaLwQd/J9tamV5GPqsgGJGOKUlhuB73gFG6YHvzHznYke+YjFxDMrdg7xFujYs9QFGBAJBawSy3M2zPREKmAYADh/tGJVyGnaMIKLG9NsSsqI4gjExDze8p55tIeUZRhMtfH3XeSSMTtmfAKfYzxtvjybZ/hGCKYdPb35y/etIKwC3VAms2m/PfLV289KRou3oNvb1+yubw9E06hDQiGivz9+StH3A65o5NTrzUyrEIZkEq1Kv98/caOPyUuLrNyeHxqj8IldAEplSvy+dteYCuCUDhc5fOyf3Rsj8IjVAFB3wbKpe02O/80yheuQxeS0AQEa9V+2Ttgz7hyCMnRadoeDV4oAoIh6p+/4c3BYhWJt1vX2UXGHg3WwAPyo7nvgL3j9BsEBKvMDNpgA2KKU98ODr354kSPHRydeEXvQRpoQE7PM16rFdFTUB/FA3SQq1kOLCDY7PLiksNHyK3ZvJP9wyN7FLyBBAQdgBiVS9QJjNka1FTqgQTk8CTNXnLqChbiwAzSoAUeEGxmeV3kiiPUHXQBYHp10AINCC7yOESdQBQtWHsgVwi26TfQgGBOB/YPJ+rVafos0A7lwAKCueQYtUn0GtjrMcjvUWABOTNvD46zon7ImIAENfIikICgWIXxNUT9gL1cgnqLBBIQLgdK/XZpHrhB1EV8DwguIpvj24P6C0Wsq3zBHvnH94BglXVsqE/Ub1cBPHh9DwimUhL5oVa/lbrP+9T7GhAs28OFpclPfhezfA0IhpUQ+cnv75i/AeG+gOSzhimlYKVGv/gWEHQKsnhFQcDcIr/4FhAs/saecwqCnw9i3wLCtwcFJZIBqfnc/Eb0Eybf+TUBz7eA1Ov+VZyIHqvV/Hkg+xIQVD38bFkgesyv75svAcHrjhV0CpJfE/F8CQh+2VgsZo+I/IcJeX7wZY9C/LLcFYqCFB8fl9mZGXvUP5HdJ50oCL61YhENAwaEyIEBIXJgQIgcGBAiBwaEyIEBIXJgQIgcGBAiBwaEyIEBIXJgQIgcGBAiBwaEyIEBIXJgQIgcGBCiZ4n8D0ohPRJVYvGDAAAAAElFTkSuQmCC");
			
			out.write(buf);
		}		
	}
	
	
}
